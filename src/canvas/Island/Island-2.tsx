/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./island-2.glb --transform --types 
Files: ./island-2.glb [13.99MB] > island-2-transformed.glb [1.95MB] (86%)
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { MeshCollider, RigidBody } from "@react-three/rapier";

type GLTFResult = GLTF & {
  nodes: {
    Landscape: THREE.Mesh;
    Torus: THREE.Mesh;
    Sphere: THREE.Mesh;
    Cylinder003: THREE.Mesh;
    Cube026: THREE.Mesh;
    Icosphere004: THREE.Mesh;
    Icosphere004_1: THREE.Mesh;
    Icosphere004_2: THREE.Mesh;
    Cube015: THREE.Mesh;
    Cube015_1: THREE.Mesh;
    Cube015_2: THREE.Mesh;
    Cube015_3: THREE.Mesh;
    Cube001: THREE.Mesh;
    Plane002: THREE.Mesh;
    Plane003: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    PaletteMaterial004: THREE.MeshStandardMaterial;
  };
};

export function Island(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/island/island-2-transformed.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <directionalLight
        intensity={0.8}
        position={[0.053, 7.956, 6.827]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <RigidBody type="fixed" colliders={false}>
        <MeshCollider type="trimesh">
          <mesh
            geometry={nodes.Landscape.geometry}
            material={materials.PaletteMaterial001}
          />
          <mesh
            geometry={nodes.Torus.geometry}
            material={materials.PaletteMaterial002}
            position={[0.599, 0.127, 1.992]}
            rotation={[0.251, 0.016, 0.004]}
            scale={0.05}
          />
          <mesh
            geometry={nodes.Sphere.geometry}
            material={materials.PaletteMaterial003}
            position={[0.637, 0.186, 1.777]}
            rotation={[0.703, 0.977, 1.197]}
            scale={0.032}
          />

          <mesh
            geometry={nodes.Cube026.geometry}
            material={nodes.Cube026.material}
            position={[0.826, 0.159, 1.941]}
            rotation={[2.486, -0.091, 3.124]}
            scale={[0.001, 0.055, 0.002]}
          />
        </MeshCollider>
      </RigidBody>
      <RigidBody type="fixed" colliders="trimesh">
      <MeshCollider type="trimesh">
          <mesh
            geometry={nodes.Cylinder003.geometry}
            material={materials.PaletteMaterial004}
            position={[0.853, 0.197, 1.944]}
            rotation={[-0.251, 0.043, 0]}
            scale={[0.031, 0.112, 0.031]}
          />
        </MeshCollider>
      </RigidBody>
      <instancedMesh
        args={[nodes.Plane002.geometry, materials.PaletteMaterial001, 7]}
        instanceMatrix={nodes.Plane002.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Plane003.geometry, materials.PaletteMaterial001, 6]}
        instanceMatrix={nodes.Plane003.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Cube001.geometry, materials.PaletteMaterial001, 184]}
        instanceMatrix={nodes.Cube001.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Icosphere004.geometry, materials.PaletteMaterial001, 19]}
        instanceMatrix={nodes.Icosphere004.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Icosphere004_1.geometry, materials.PaletteMaterial001, 19]}
        instanceMatrix={nodes.Icosphere004_1.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Icosphere004_2.geometry, materials.PaletteMaterial001, 19]}
        instanceMatrix={nodes.Icosphere004_2.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Cube015.geometry, materials.PaletteMaterial001, 20]}
        instanceMatrix={nodes.Cube015.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Cube015_1.geometry, materials.PaletteMaterial001, 20]}
        instanceMatrix={nodes.Cube015_1.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Cube015_2.geometry, materials.PaletteMaterial001, 20]}
        instanceMatrix={nodes.Cube015_2.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Cube015_3.geometry, materials.PaletteMaterial001, 20]}
        instanceMatrix={nodes.Cube015_3.instanceMatrix}
      />
    </group>
  );
}

useGLTF.preload("/models/island/island-2-transformed.glb");
