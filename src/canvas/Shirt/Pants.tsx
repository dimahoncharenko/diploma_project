/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./pants2.glb --types 
*/

import * as THREE from "three";
import { useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";

import { changeUVWrapping } from "../../utils";
import { useEffect, useState } from "react";

type GLTFResult = GLTF & {
  nodes: {
    Body: THREE.Mesh;
    Holes: THREE.Mesh;
    t_pockets: THREE.Mesh;
    b_pockets: THREE.Mesh;
    head_t_pockets: THREE.Mesh;
    head_b_pockets: THREE.Mesh;
    Button: THREE.Mesh;
    back_pockets: THREE.Mesh;
    head_back_pockets: THREE.Mesh;
    Strap: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
  };
};

type MaterialTypes = "Black Leather";
const material_presets = {
  "Black Leather": {
    id: "Black Leather",
    maps: {
      map: "/textures/pants_materials/Black_Leather_Base.jpg",
      roughnessMap: "/textures/pants_materials/Black_Leather_Roughness.jpg",
    },
    props: {
      roughness: 8
    }
  },
};

function Pants(props: JSX.IntrinsicElements["group"]) {
  const [materialId] = useState<MaterialTypes>("Black Leather");
  
  const { nodes, materials } = useGLTF(
    "/models/pants/pants2.glb"
  ) as GLTFResult;

  const maps = useTexture(material_presets[materialId].maps); 

    useEffect(() => {
      if (!maps) return;
      changeUVWrapping(Object.values(maps), THREE.RepeatWrapping);
    }, [maps]);

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Body.geometry}
        // material={materials["Material.001"]}
        position={[0, 5.044, 0]}
        scale={2.726}
      >
        <meshStandardMaterial {...maps} {...material_presets[materialId].props} side={THREE.DoubleSide} />
      </mesh>
      <mesh
        geometry={nodes.Holes.geometry}
        material={materials["Material.001"]}
        position={[0.401, 5.334, 0.645]}
        rotation={[1.587, 0.085, -0.279]}
        scale={2.726}
      />
      <mesh
        geometry={nodes.t_pockets.geometry}
        material={materials["Material.001"]}
        position={[1.195, 3.652, 0]}
        rotation={[0, 0, -1.559]}
        scale={2.726}
      >
        
      </mesh>
      <mesh
        geometry={nodes.b_pockets.geometry}
        material={materials["Material.001"]}
        position={[1.759, 1.969, 0]}
        rotation={[0, 0, -1.559]}
        scale={2.726}
      />
      <mesh
        geometry={nodes.head_t_pockets.geometry}
        material={materials["Material.001"]}
        position={[1.367, 3.652, 0]}
        rotation={[0, 0, -1.559]}
        scale={2.726}
      />
      <mesh
        geometry={nodes.head_b_pockets.geometry}
        material={materials["Material.001"]}
        position={[1.759, 1.969, 0]}
        rotation={[0, 0, -1.559]}
        scale={2.726}
      />
      <mesh
        geometry={nodes.Button.geometry}
        material={materials["Material.001"]}
        position={[0.067, 5.335, 0.736]}
        rotation={[1.5, -0.783, -0.1]}
        scale={2.726}
      />
      <mesh
        geometry={nodes.back_pockets.geometry}
        material={materials["Material.001"]}
        position={[0.778, 4.68, -1.198]}
        rotation={[0, 1.089, -1.559]}
        scale={2.726}
      />
      <mesh
        geometry={nodes.head_back_pockets.geometry}
        material={materials["Material.001"]}
        position={[0.778, 4.68, -1.198]}
        rotation={[0, 1.089, -1.559]}
        scale={2.726}
      />
      <mesh
        geometry={nodes.Strap.geometry}
        material={materials["Material.001"]}
        position={[0, 5.044, 0]}
        scale={2.726}
      />
    </group>
  );
}

export default Pants;