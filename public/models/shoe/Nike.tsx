/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./nike.glb --types 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Accessory_1: THREE.Mesh
    Accessory_2: THREE.Mesh
    Accessory_3: THREE.Mesh
    Body: THREE.Mesh
    Circles: THREE.Mesh
    Interior: THREE.Mesh
    Laces: THREE.Mesh
    Logo: THREE.Mesh
    Sole: THREE.Mesh
  }
  materials: {
    ['NikeShoe.001']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/nike.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Accessory_1.geometry} material={materials['NikeShoe.001']} />
      <mesh geometry={nodes.Accessory_2.geometry} material={materials['NikeShoe.001']} />
      <mesh geometry={nodes.Accessory_3.geometry} material={materials['NikeShoe.001']} />
      <mesh geometry={nodes.Body.geometry} material={materials['NikeShoe.001']} />
      <mesh geometry={nodes.Circles.geometry} material={materials['NikeShoe.001']} />
      <mesh geometry={nodes.Interior.geometry} material={materials['NikeShoe.001']} />
      <mesh geometry={nodes.Laces.geometry} material={materials['NikeShoe.001']} />
      <mesh geometry={nodes.Logo.geometry} material={materials['NikeShoe.001']} />
      <mesh geometry={nodes.Sole.geometry} material={materials['NikeShoe.001']} />
    </group>
  )
}

useGLTF.preload('/nike.glb')
